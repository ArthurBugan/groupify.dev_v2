/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppIndexRouteImport } from './routes/_app/index'
import { Route as AppTermsRouteImport } from './routes/_app/terms'
import { Route as AppPrivacyRouteImport } from './routes/_app/privacy'
import { Route as AppDashboardRouteRouteImport } from './routes/_app/dashboard/route'
import { Route as AuthRegisterIndexRouteImport } from './routes/_auth/register/index'
import { Route as AuthLoginIndexRouteImport } from './routes/_auth/login/index'
import { Route as AuthForgotPasswordIndexRouteImport } from './routes/_auth/forgot-password/index'
import { Route as AppSupportIndexRouteImport } from './routes/_app/support/index'
import { Route as AppDashboardIndexRouteImport } from './routes/_app/dashboard/index'
import { Route as AppDashboardSettingsRouteRouteImport } from './routes/_app/dashboard/settings/route'
import { Route as AppDashboardGroupsIndexRouteImport } from './routes/_app/dashboard/groups/index'
import { Route as AppDashboardChannelsIndexRouteImport } from './routes/_app/dashboard/channels/index'
import { Route as AppDashboardAnimesIndexRouteImport } from './routes/_app/dashboard/animes/index'
import { Route as AuthSubscriptionsConfirmCodeRouteImport } from './routes/_auth/subscriptions/confirm.$code'
import { Route as AuthForgotPasswordSuccessEmailIndexRouteImport } from './routes/_auth/forgot-password/success/$email/index'
import { Route as AppShareTypeIdIndexRouteImport } from './routes/_app/share/$type/$id/index'
import { Route as AppDashboardSettingsPrivacyIndexRouteImport } from './routes/_app/dashboard/settings/privacy/index'
import { Route as AppDashboardSettingsNotificationsIndexRouteImport } from './routes/_app/dashboard/settings/notifications/index'
import { Route as AppDashboardSettingsIntegrationsIndexRouteImport } from './routes/_app/dashboard/settings/integrations/index'
import { Route as AppDashboardSettingsGroupsIndexRouteImport } from './routes/_app/dashboard/settings/groups/index'
import { Route as AppDashboardSettingsBillingIndexRouteImport } from './routes/_app/dashboard/settings/billing/index'
import { Route as AppDashboardSettingsAppearanceIndexRouteImport } from './routes/_app/dashboard/settings/appearance/index'
import { Route as AppDashboardSettingsAccountIndexRouteImport } from './routes/_app/dashboard/settings/account/index'
import { Route as AppDashboardGroupsNewIndexRouteImport } from './routes/_app/dashboard/groups/new/index'
import { Route as AppDashboardGroupsIdIndexRouteImport } from './routes/_app/dashboard/groups/$id/index'
import { Route as AppDashboardGroupsIdShareIndexRouteImport } from './routes/_app/dashboard/groups/$id/share/index'
import { Route as AppDashboardGroupsIdEditIndexRouteImport } from './routes/_app/dashboard/groups/$id/edit/index'
import { Route as AppDashboardGroupsIdAddChannelIndexRouteImport } from './routes/_app/dashboard/groups/$id/add-channel/index'
import { Route as AppDashboardChannelsEditIdIndexRouteImport } from './routes/_app/dashboard/channels/edit/$id/index'
import { Route as AppDashboardChannelsChangeGroupIdIndexRouteImport } from './routes/_app/dashboard/channels/change-group/$id/index'
import { Route as AppDashboardAnimesEditIdIndexRouteImport } from './routes/_app/dashboard/animes/edit/$id.index'
import { Route as AppDashboardAnimesChangeGroupIdIndexRouteImport } from './routes/_app/dashboard/animes/change-group/$id.index'

const AppIndexRoute = AppIndexRouteImport.update({
  id: '/_app/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppTermsRoute = AppTermsRouteImport.update({
  id: '/_app/terms',
  path: '/terms',
  getParentRoute: () => rootRouteImport,
} as any)
const AppPrivacyRoute = AppPrivacyRouteImport.update({
  id: '/_app/privacy',
  path: '/privacy',
  getParentRoute: () => rootRouteImport,
} as any)
const AppDashboardRouteRoute = AppDashboardRouteRouteImport.update({
  id: '/_app/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterIndexRoute = AuthRegisterIndexRouteImport.update({
  id: '/_auth/register/',
  path: '/register/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginIndexRoute = AuthLoginIndexRouteImport.update({
  id: '/_auth/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthForgotPasswordIndexRoute = AuthForgotPasswordIndexRouteImport.update({
  id: '/_auth/forgot-password/',
  path: '/forgot-password/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppSupportIndexRoute = AppSupportIndexRouteImport.update({
  id: '/_app/support/',
  path: '/support/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppDashboardIndexRoute = AppDashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppDashboardRouteRoute,
} as any)
const AppDashboardSettingsRouteRoute =
  AppDashboardSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any)
const AppDashboardGroupsIndexRoute = AppDashboardGroupsIndexRouteImport.update({
  id: '/groups/',
  path: '/groups/',
  getParentRoute: () => AppDashboardRouteRoute,
} as any)
const AppDashboardChannelsIndexRoute =
  AppDashboardChannelsIndexRouteImport.update({
    id: '/channels/',
    path: '/channels/',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any)
const AppDashboardAnimesIndexRoute = AppDashboardAnimesIndexRouteImport.update({
  id: '/animes/',
  path: '/animes/',
  getParentRoute: () => AppDashboardRouteRoute,
} as any)
const AuthSubscriptionsConfirmCodeRoute =
  AuthSubscriptionsConfirmCodeRouteImport.update({
    id: '/_auth/subscriptions/confirm/$code',
    path: '/subscriptions/confirm/$code',
    getParentRoute: () => rootRouteImport,
  } as any)
const AuthForgotPasswordSuccessEmailIndexRoute =
  AuthForgotPasswordSuccessEmailIndexRouteImport.update({
    id: '/_auth/forgot-password/success/$email/',
    path: '/forgot-password/success/$email/',
    getParentRoute: () => rootRouteImport,
  } as any)
const AppShareTypeIdIndexRoute = AppShareTypeIdIndexRouteImport.update({
  id: '/_app/share/$type/$id/',
  path: '/share/$type/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppDashboardSettingsPrivacyIndexRoute =
  AppDashboardSettingsPrivacyIndexRouteImport.update({
    id: '/privacy/',
    path: '/privacy/',
    getParentRoute: () => AppDashboardSettingsRouteRoute,
  } as any)
const AppDashboardSettingsNotificationsIndexRoute =
  AppDashboardSettingsNotificationsIndexRouteImport.update({
    id: '/notifications/',
    path: '/notifications/',
    getParentRoute: () => AppDashboardSettingsRouteRoute,
  } as any)
const AppDashboardSettingsIntegrationsIndexRoute =
  AppDashboardSettingsIntegrationsIndexRouteImport.update({
    id: '/integrations/',
    path: '/integrations/',
    getParentRoute: () => AppDashboardSettingsRouteRoute,
  } as any)
const AppDashboardSettingsGroupsIndexRoute =
  AppDashboardSettingsGroupsIndexRouteImport.update({
    id: '/groups/',
    path: '/groups/',
    getParentRoute: () => AppDashboardSettingsRouteRoute,
  } as any)
const AppDashboardSettingsBillingIndexRoute =
  AppDashboardSettingsBillingIndexRouteImport.update({
    id: '/billing/',
    path: '/billing/',
    getParentRoute: () => AppDashboardSettingsRouteRoute,
  } as any)
const AppDashboardSettingsAppearanceIndexRoute =
  AppDashboardSettingsAppearanceIndexRouteImport.update({
    id: '/appearance/',
    path: '/appearance/',
    getParentRoute: () => AppDashboardSettingsRouteRoute,
  } as any)
const AppDashboardSettingsAccountIndexRoute =
  AppDashboardSettingsAccountIndexRouteImport.update({
    id: '/account/',
    path: '/account/',
    getParentRoute: () => AppDashboardSettingsRouteRoute,
  } as any)
const AppDashboardGroupsNewIndexRoute =
  AppDashboardGroupsNewIndexRouteImport.update({
    id: '/groups/new/',
    path: '/groups/new/',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any)
const AppDashboardGroupsIdIndexRoute =
  AppDashboardGroupsIdIndexRouteImport.update({
    id: '/groups/$id/',
    path: '/groups/$id/',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any)
const AppDashboardGroupsIdShareIndexRoute =
  AppDashboardGroupsIdShareIndexRouteImport.update({
    id: '/groups/$id/share/',
    path: '/groups/$id/share/',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any)
const AppDashboardGroupsIdEditIndexRoute =
  AppDashboardGroupsIdEditIndexRouteImport.update({
    id: '/groups/$id/edit/',
    path: '/groups/$id/edit/',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any)
const AppDashboardGroupsIdAddChannelIndexRoute =
  AppDashboardGroupsIdAddChannelIndexRouteImport.update({
    id: '/groups/$id/add-channel/',
    path: '/groups/$id/add-channel/',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any)
const AppDashboardChannelsEditIdIndexRoute =
  AppDashboardChannelsEditIdIndexRouteImport.update({
    id: '/channels/edit/$id/',
    path: '/channels/edit/$id/',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any)
const AppDashboardChannelsChangeGroupIdIndexRoute =
  AppDashboardChannelsChangeGroupIdIndexRouteImport.update({
    id: '/channels/change-group/$id/',
    path: '/channels/change-group/$id/',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any)
const AppDashboardAnimesEditIdIndexRoute =
  AppDashboardAnimesEditIdIndexRouteImport.update({
    id: '/animes/edit/$id/',
    path: '/animes/edit/$id/',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any)
const AppDashboardAnimesChangeGroupIdIndexRoute =
  AppDashboardAnimesChangeGroupIdIndexRouteImport.update({
    id: '/animes/change-group/$id/',
    path: '/animes/change-group/$id/',
    getParentRoute: () => AppDashboardRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/dashboard': typeof AppDashboardRouteRouteWithChildren
  '/privacy': typeof AppPrivacyRoute
  '/terms': typeof AppTermsRoute
  '/': typeof AppIndexRoute
  '/dashboard/settings': typeof AppDashboardSettingsRouteRouteWithChildren
  '/dashboard/': typeof AppDashboardIndexRoute
  '/support': typeof AppSupportIndexRoute
  '/forgot-password': typeof AuthForgotPasswordIndexRoute
  '/login': typeof AuthLoginIndexRoute
  '/register': typeof AuthRegisterIndexRoute
  '/subscriptions/confirm/$code': typeof AuthSubscriptionsConfirmCodeRoute
  '/dashboard/animes': typeof AppDashboardAnimesIndexRoute
  '/dashboard/channels': typeof AppDashboardChannelsIndexRoute
  '/dashboard/groups': typeof AppDashboardGroupsIndexRoute
  '/dashboard/groups/$id': typeof AppDashboardGroupsIdIndexRoute
  '/dashboard/groups/new': typeof AppDashboardGroupsNewIndexRoute
  '/dashboard/settings/account': typeof AppDashboardSettingsAccountIndexRoute
  '/dashboard/settings/appearance': typeof AppDashboardSettingsAppearanceIndexRoute
  '/dashboard/settings/billing': typeof AppDashboardSettingsBillingIndexRoute
  '/dashboard/settings/groups': typeof AppDashboardSettingsGroupsIndexRoute
  '/dashboard/settings/integrations': typeof AppDashboardSettingsIntegrationsIndexRoute
  '/dashboard/settings/notifications': typeof AppDashboardSettingsNotificationsIndexRoute
  '/dashboard/settings/privacy': typeof AppDashboardSettingsPrivacyIndexRoute
  '/share/$type/$id': typeof AppShareTypeIdIndexRoute
  '/forgot-password/success/$email': typeof AuthForgotPasswordSuccessEmailIndexRoute
  '/dashboard/animes/change-group/$id': typeof AppDashboardAnimesChangeGroupIdIndexRoute
  '/dashboard/animes/edit/$id': typeof AppDashboardAnimesEditIdIndexRoute
  '/dashboard/channels/change-group/$id': typeof AppDashboardChannelsChangeGroupIdIndexRoute
  '/dashboard/channels/edit/$id': typeof AppDashboardChannelsEditIdIndexRoute
  '/dashboard/groups/$id/add-channel': typeof AppDashboardGroupsIdAddChannelIndexRoute
  '/dashboard/groups/$id/edit': typeof AppDashboardGroupsIdEditIndexRoute
  '/dashboard/groups/$id/share': typeof AppDashboardGroupsIdShareIndexRoute
}
export interface FileRoutesByTo {
  '/privacy': typeof AppPrivacyRoute
  '/terms': typeof AppTermsRoute
  '/': typeof AppIndexRoute
  '/dashboard/settings': typeof AppDashboardSettingsRouteRouteWithChildren
  '/dashboard': typeof AppDashboardIndexRoute
  '/support': typeof AppSupportIndexRoute
  '/forgot-password': typeof AuthForgotPasswordIndexRoute
  '/login': typeof AuthLoginIndexRoute
  '/register': typeof AuthRegisterIndexRoute
  '/subscriptions/confirm/$code': typeof AuthSubscriptionsConfirmCodeRoute
  '/dashboard/animes': typeof AppDashboardAnimesIndexRoute
  '/dashboard/channels': typeof AppDashboardChannelsIndexRoute
  '/dashboard/groups': typeof AppDashboardGroupsIndexRoute
  '/dashboard/groups/$id': typeof AppDashboardGroupsIdIndexRoute
  '/dashboard/groups/new': typeof AppDashboardGroupsNewIndexRoute
  '/dashboard/settings/account': typeof AppDashboardSettingsAccountIndexRoute
  '/dashboard/settings/appearance': typeof AppDashboardSettingsAppearanceIndexRoute
  '/dashboard/settings/billing': typeof AppDashboardSettingsBillingIndexRoute
  '/dashboard/settings/groups': typeof AppDashboardSettingsGroupsIndexRoute
  '/dashboard/settings/integrations': typeof AppDashboardSettingsIntegrationsIndexRoute
  '/dashboard/settings/notifications': typeof AppDashboardSettingsNotificationsIndexRoute
  '/dashboard/settings/privacy': typeof AppDashboardSettingsPrivacyIndexRoute
  '/share/$type/$id': typeof AppShareTypeIdIndexRoute
  '/forgot-password/success/$email': typeof AuthForgotPasswordSuccessEmailIndexRoute
  '/dashboard/animes/change-group/$id': typeof AppDashboardAnimesChangeGroupIdIndexRoute
  '/dashboard/animes/edit/$id': typeof AppDashboardAnimesEditIdIndexRoute
  '/dashboard/channels/change-group/$id': typeof AppDashboardChannelsChangeGroupIdIndexRoute
  '/dashboard/channels/edit/$id': typeof AppDashboardChannelsEditIdIndexRoute
  '/dashboard/groups/$id/add-channel': typeof AppDashboardGroupsIdAddChannelIndexRoute
  '/dashboard/groups/$id/edit': typeof AppDashboardGroupsIdEditIndexRoute
  '/dashboard/groups/$id/share': typeof AppDashboardGroupsIdShareIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app/dashboard': typeof AppDashboardRouteRouteWithChildren
  '/_app/privacy': typeof AppPrivacyRoute
  '/_app/terms': typeof AppTermsRoute
  '/_app/': typeof AppIndexRoute
  '/_app/dashboard/settings': typeof AppDashboardSettingsRouteRouteWithChildren
  '/_app/dashboard/': typeof AppDashboardIndexRoute
  '/_app/support/': typeof AppSupportIndexRoute
  '/_auth/forgot-password/': typeof AuthForgotPasswordIndexRoute
  '/_auth/login/': typeof AuthLoginIndexRoute
  '/_auth/register/': typeof AuthRegisterIndexRoute
  '/_auth/subscriptions/confirm/$code': typeof AuthSubscriptionsConfirmCodeRoute
  '/_app/dashboard/animes/': typeof AppDashboardAnimesIndexRoute
  '/_app/dashboard/channels/': typeof AppDashboardChannelsIndexRoute
  '/_app/dashboard/groups/': typeof AppDashboardGroupsIndexRoute
  '/_app/dashboard/groups/$id/': typeof AppDashboardGroupsIdIndexRoute
  '/_app/dashboard/groups/new/': typeof AppDashboardGroupsNewIndexRoute
  '/_app/dashboard/settings/account/': typeof AppDashboardSettingsAccountIndexRoute
  '/_app/dashboard/settings/appearance/': typeof AppDashboardSettingsAppearanceIndexRoute
  '/_app/dashboard/settings/billing/': typeof AppDashboardSettingsBillingIndexRoute
  '/_app/dashboard/settings/groups/': typeof AppDashboardSettingsGroupsIndexRoute
  '/_app/dashboard/settings/integrations/': typeof AppDashboardSettingsIntegrationsIndexRoute
  '/_app/dashboard/settings/notifications/': typeof AppDashboardSettingsNotificationsIndexRoute
  '/_app/dashboard/settings/privacy/': typeof AppDashboardSettingsPrivacyIndexRoute
  '/_app/share/$type/$id/': typeof AppShareTypeIdIndexRoute
  '/_auth/forgot-password/success/$email/': typeof AuthForgotPasswordSuccessEmailIndexRoute
  '/_app/dashboard/animes/change-group/$id/': typeof AppDashboardAnimesChangeGroupIdIndexRoute
  '/_app/dashboard/animes/edit/$id/': typeof AppDashboardAnimesEditIdIndexRoute
  '/_app/dashboard/channels/change-group/$id/': typeof AppDashboardChannelsChangeGroupIdIndexRoute
  '/_app/dashboard/channels/edit/$id/': typeof AppDashboardChannelsEditIdIndexRoute
  '/_app/dashboard/groups/$id/add-channel/': typeof AppDashboardGroupsIdAddChannelIndexRoute
  '/_app/dashboard/groups/$id/edit/': typeof AppDashboardGroupsIdEditIndexRoute
  '/_app/dashboard/groups/$id/share/': typeof AppDashboardGroupsIdShareIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/dashboard'
    | '/privacy'
    | '/terms'
    | '/'
    | '/dashboard/settings'
    | '/dashboard/'
    | '/support'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/subscriptions/confirm/$code'
    | '/dashboard/animes'
    | '/dashboard/channels'
    | '/dashboard/groups'
    | '/dashboard/groups/$id'
    | '/dashboard/groups/new'
    | '/dashboard/settings/account'
    | '/dashboard/settings/appearance'
    | '/dashboard/settings/billing'
    | '/dashboard/settings/groups'
    | '/dashboard/settings/integrations'
    | '/dashboard/settings/notifications'
    | '/dashboard/settings/privacy'
    | '/share/$type/$id'
    | '/forgot-password/success/$email'
    | '/dashboard/animes/change-group/$id'
    | '/dashboard/animes/edit/$id'
    | '/dashboard/channels/change-group/$id'
    | '/dashboard/channels/edit/$id'
    | '/dashboard/groups/$id/add-channel'
    | '/dashboard/groups/$id/edit'
    | '/dashboard/groups/$id/share'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/privacy'
    | '/terms'
    | '/'
    | '/dashboard/settings'
    | '/dashboard'
    | '/support'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/subscriptions/confirm/$code'
    | '/dashboard/animes'
    | '/dashboard/channels'
    | '/dashboard/groups'
    | '/dashboard/groups/$id'
    | '/dashboard/groups/new'
    | '/dashboard/settings/account'
    | '/dashboard/settings/appearance'
    | '/dashboard/settings/billing'
    | '/dashboard/settings/groups'
    | '/dashboard/settings/integrations'
    | '/dashboard/settings/notifications'
    | '/dashboard/settings/privacy'
    | '/share/$type/$id'
    | '/forgot-password/success/$email'
    | '/dashboard/animes/change-group/$id'
    | '/dashboard/animes/edit/$id'
    | '/dashboard/channels/change-group/$id'
    | '/dashboard/channels/edit/$id'
    | '/dashboard/groups/$id/add-channel'
    | '/dashboard/groups/$id/edit'
    | '/dashboard/groups/$id/share'
  id:
    | '__root__'
    | '/_app/dashboard'
    | '/_app/privacy'
    | '/_app/terms'
    | '/_app/'
    | '/_app/dashboard/settings'
    | '/_app/dashboard/'
    | '/_app/support/'
    | '/_auth/forgot-password/'
    | '/_auth/login/'
    | '/_auth/register/'
    | '/_auth/subscriptions/confirm/$code'
    | '/_app/dashboard/animes/'
    | '/_app/dashboard/channels/'
    | '/_app/dashboard/groups/'
    | '/_app/dashboard/groups/$id/'
    | '/_app/dashboard/groups/new/'
    | '/_app/dashboard/settings/account/'
    | '/_app/dashboard/settings/appearance/'
    | '/_app/dashboard/settings/billing/'
    | '/_app/dashboard/settings/groups/'
    | '/_app/dashboard/settings/integrations/'
    | '/_app/dashboard/settings/notifications/'
    | '/_app/dashboard/settings/privacy/'
    | '/_app/share/$type/$id/'
    | '/_auth/forgot-password/success/$email/'
    | '/_app/dashboard/animes/change-group/$id/'
    | '/_app/dashboard/animes/edit/$id/'
    | '/_app/dashboard/channels/change-group/$id/'
    | '/_app/dashboard/channels/edit/$id/'
    | '/_app/dashboard/groups/$id/add-channel/'
    | '/_app/dashboard/groups/$id/edit/'
    | '/_app/dashboard/groups/$id/share/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppDashboardRouteRoute: typeof AppDashboardRouteRouteWithChildren
  AppPrivacyRoute: typeof AppPrivacyRoute
  AppTermsRoute: typeof AppTermsRoute
  AppIndexRoute: typeof AppIndexRoute
  AppSupportIndexRoute: typeof AppSupportIndexRoute
  AuthForgotPasswordIndexRoute: typeof AuthForgotPasswordIndexRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
  AuthRegisterIndexRoute: typeof AuthRegisterIndexRoute
  AuthSubscriptionsConfirmCodeRoute: typeof AuthSubscriptionsConfirmCodeRoute
  AppShareTypeIdIndexRoute: typeof AppShareTypeIdIndexRoute
  AuthForgotPasswordSuccessEmailIndexRoute: typeof AuthForgotPasswordSuccessEmailIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/terms': {
      id: '/_app/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof AppTermsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/privacy': {
      id: '/_app/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof AppPrivacyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/dashboard': {
      id: '/_app/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppDashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/register/': {
      id: '/_auth/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/login/': {
      id: '/_auth/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/forgot-password/': {
      id: '/_auth/forgot-password/'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/support/': {
      id: '/_app/support/'
      path: '/support'
      fullPath: '/support'
      preLoaderRoute: typeof AppSupportIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/dashboard/': {
      id: '/_app/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof AppDashboardIndexRouteImport
      parentRoute: typeof AppDashboardRouteRoute
    }
    '/_app/dashboard/settings': {
      id: '/_app/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof AppDashboardSettingsRouteRouteImport
      parentRoute: typeof AppDashboardRouteRoute
    }
    '/_app/dashboard/groups/': {
      id: '/_app/dashboard/groups/'
      path: '/groups'
      fullPath: '/dashboard/groups'
      preLoaderRoute: typeof AppDashboardGroupsIndexRouteImport
      parentRoute: typeof AppDashboardRouteRoute
    }
    '/_app/dashboard/channels/': {
      id: '/_app/dashboard/channels/'
      path: '/channels'
      fullPath: '/dashboard/channels'
      preLoaderRoute: typeof AppDashboardChannelsIndexRouteImport
      parentRoute: typeof AppDashboardRouteRoute
    }
    '/_app/dashboard/animes/': {
      id: '/_app/dashboard/animes/'
      path: '/animes'
      fullPath: '/dashboard/animes'
      preLoaderRoute: typeof AppDashboardAnimesIndexRouteImport
      parentRoute: typeof AppDashboardRouteRoute
    }
    '/_auth/subscriptions/confirm/$code': {
      id: '/_auth/subscriptions/confirm/$code'
      path: '/subscriptions/confirm/$code'
      fullPath: '/subscriptions/confirm/$code'
      preLoaderRoute: typeof AuthSubscriptionsConfirmCodeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/forgot-password/success/$email/': {
      id: '/_auth/forgot-password/success/$email/'
      path: '/forgot-password/success/$email'
      fullPath: '/forgot-password/success/$email'
      preLoaderRoute: typeof AuthForgotPasswordSuccessEmailIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/share/$type/$id/': {
      id: '/_app/share/$type/$id/'
      path: '/share/$type/$id'
      fullPath: '/share/$type/$id'
      preLoaderRoute: typeof AppShareTypeIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/dashboard/settings/privacy/': {
      id: '/_app/dashboard/settings/privacy/'
      path: '/privacy'
      fullPath: '/dashboard/settings/privacy'
      preLoaderRoute: typeof AppDashboardSettingsPrivacyIndexRouteImport
      parentRoute: typeof AppDashboardSettingsRouteRoute
    }
    '/_app/dashboard/settings/notifications/': {
      id: '/_app/dashboard/settings/notifications/'
      path: '/notifications'
      fullPath: '/dashboard/settings/notifications'
      preLoaderRoute: typeof AppDashboardSettingsNotificationsIndexRouteImport
      parentRoute: typeof AppDashboardSettingsRouteRoute
    }
    '/_app/dashboard/settings/integrations/': {
      id: '/_app/dashboard/settings/integrations/'
      path: '/integrations'
      fullPath: '/dashboard/settings/integrations'
      preLoaderRoute: typeof AppDashboardSettingsIntegrationsIndexRouteImport
      parentRoute: typeof AppDashboardSettingsRouteRoute
    }
    '/_app/dashboard/settings/groups/': {
      id: '/_app/dashboard/settings/groups/'
      path: '/groups'
      fullPath: '/dashboard/settings/groups'
      preLoaderRoute: typeof AppDashboardSettingsGroupsIndexRouteImport
      parentRoute: typeof AppDashboardSettingsRouteRoute
    }
    '/_app/dashboard/settings/billing/': {
      id: '/_app/dashboard/settings/billing/'
      path: '/billing'
      fullPath: '/dashboard/settings/billing'
      preLoaderRoute: typeof AppDashboardSettingsBillingIndexRouteImport
      parentRoute: typeof AppDashboardSettingsRouteRoute
    }
    '/_app/dashboard/settings/appearance/': {
      id: '/_app/dashboard/settings/appearance/'
      path: '/appearance'
      fullPath: '/dashboard/settings/appearance'
      preLoaderRoute: typeof AppDashboardSettingsAppearanceIndexRouteImport
      parentRoute: typeof AppDashboardSettingsRouteRoute
    }
    '/_app/dashboard/settings/account/': {
      id: '/_app/dashboard/settings/account/'
      path: '/account'
      fullPath: '/dashboard/settings/account'
      preLoaderRoute: typeof AppDashboardSettingsAccountIndexRouteImport
      parentRoute: typeof AppDashboardSettingsRouteRoute
    }
    '/_app/dashboard/groups/new/': {
      id: '/_app/dashboard/groups/new/'
      path: '/groups/new'
      fullPath: '/dashboard/groups/new'
      preLoaderRoute: typeof AppDashboardGroupsNewIndexRouteImport
      parentRoute: typeof AppDashboardRouteRoute
    }
    '/_app/dashboard/groups/$id/': {
      id: '/_app/dashboard/groups/$id/'
      path: '/groups/$id'
      fullPath: '/dashboard/groups/$id'
      preLoaderRoute: typeof AppDashboardGroupsIdIndexRouteImport
      parentRoute: typeof AppDashboardRouteRoute
    }
    '/_app/dashboard/groups/$id/share/': {
      id: '/_app/dashboard/groups/$id/share/'
      path: '/groups/$id/share'
      fullPath: '/dashboard/groups/$id/share'
      preLoaderRoute: typeof AppDashboardGroupsIdShareIndexRouteImport
      parentRoute: typeof AppDashboardRouteRoute
    }
    '/_app/dashboard/groups/$id/edit/': {
      id: '/_app/dashboard/groups/$id/edit/'
      path: '/groups/$id/edit'
      fullPath: '/dashboard/groups/$id/edit'
      preLoaderRoute: typeof AppDashboardGroupsIdEditIndexRouteImport
      parentRoute: typeof AppDashboardRouteRoute
    }
    '/_app/dashboard/groups/$id/add-channel/': {
      id: '/_app/dashboard/groups/$id/add-channel/'
      path: '/groups/$id/add-channel'
      fullPath: '/dashboard/groups/$id/add-channel'
      preLoaderRoute: typeof AppDashboardGroupsIdAddChannelIndexRouteImport
      parentRoute: typeof AppDashboardRouteRoute
    }
    '/_app/dashboard/channels/edit/$id/': {
      id: '/_app/dashboard/channels/edit/$id/'
      path: '/channels/edit/$id'
      fullPath: '/dashboard/channels/edit/$id'
      preLoaderRoute: typeof AppDashboardChannelsEditIdIndexRouteImport
      parentRoute: typeof AppDashboardRouteRoute
    }
    '/_app/dashboard/channels/change-group/$id/': {
      id: '/_app/dashboard/channels/change-group/$id/'
      path: '/channels/change-group/$id'
      fullPath: '/dashboard/channels/change-group/$id'
      preLoaderRoute: typeof AppDashboardChannelsChangeGroupIdIndexRouteImport
      parentRoute: typeof AppDashboardRouteRoute
    }
    '/_app/dashboard/animes/edit/$id/': {
      id: '/_app/dashboard/animes/edit/$id/'
      path: '/animes/edit/$id'
      fullPath: '/dashboard/animes/edit/$id'
      preLoaderRoute: typeof AppDashboardAnimesEditIdIndexRouteImport
      parentRoute: typeof AppDashboardRouteRoute
    }
    '/_app/dashboard/animes/change-group/$id/': {
      id: '/_app/dashboard/animes/change-group/$id/'
      path: '/animes/change-group/$id'
      fullPath: '/dashboard/animes/change-group/$id'
      preLoaderRoute: typeof AppDashboardAnimesChangeGroupIdIndexRouteImport
      parentRoute: typeof AppDashboardRouteRoute
    }
  }
}

interface AppDashboardSettingsRouteRouteChildren {
  AppDashboardSettingsAccountIndexRoute: typeof AppDashboardSettingsAccountIndexRoute
  AppDashboardSettingsAppearanceIndexRoute: typeof AppDashboardSettingsAppearanceIndexRoute
  AppDashboardSettingsBillingIndexRoute: typeof AppDashboardSettingsBillingIndexRoute
  AppDashboardSettingsGroupsIndexRoute: typeof AppDashboardSettingsGroupsIndexRoute
  AppDashboardSettingsIntegrationsIndexRoute: typeof AppDashboardSettingsIntegrationsIndexRoute
  AppDashboardSettingsNotificationsIndexRoute: typeof AppDashboardSettingsNotificationsIndexRoute
  AppDashboardSettingsPrivacyIndexRoute: typeof AppDashboardSettingsPrivacyIndexRoute
}

const AppDashboardSettingsRouteRouteChildren: AppDashboardSettingsRouteRouteChildren =
  {
    AppDashboardSettingsAccountIndexRoute:
      AppDashboardSettingsAccountIndexRoute,
    AppDashboardSettingsAppearanceIndexRoute:
      AppDashboardSettingsAppearanceIndexRoute,
    AppDashboardSettingsBillingIndexRoute:
      AppDashboardSettingsBillingIndexRoute,
    AppDashboardSettingsGroupsIndexRoute: AppDashboardSettingsGroupsIndexRoute,
    AppDashboardSettingsIntegrationsIndexRoute:
      AppDashboardSettingsIntegrationsIndexRoute,
    AppDashboardSettingsNotificationsIndexRoute:
      AppDashboardSettingsNotificationsIndexRoute,
    AppDashboardSettingsPrivacyIndexRoute:
      AppDashboardSettingsPrivacyIndexRoute,
  }

const AppDashboardSettingsRouteRouteWithChildren =
  AppDashboardSettingsRouteRoute._addFileChildren(
    AppDashboardSettingsRouteRouteChildren,
  )

interface AppDashboardRouteRouteChildren {
  AppDashboardSettingsRouteRoute: typeof AppDashboardSettingsRouteRouteWithChildren
  AppDashboardIndexRoute: typeof AppDashboardIndexRoute
  AppDashboardAnimesIndexRoute: typeof AppDashboardAnimesIndexRoute
  AppDashboardChannelsIndexRoute: typeof AppDashboardChannelsIndexRoute
  AppDashboardGroupsIndexRoute: typeof AppDashboardGroupsIndexRoute
  AppDashboardGroupsIdIndexRoute: typeof AppDashboardGroupsIdIndexRoute
  AppDashboardGroupsNewIndexRoute: typeof AppDashboardGroupsNewIndexRoute
  AppDashboardAnimesChangeGroupIdIndexRoute: typeof AppDashboardAnimesChangeGroupIdIndexRoute
  AppDashboardAnimesEditIdIndexRoute: typeof AppDashboardAnimesEditIdIndexRoute
  AppDashboardChannelsChangeGroupIdIndexRoute: typeof AppDashboardChannelsChangeGroupIdIndexRoute
  AppDashboardChannelsEditIdIndexRoute: typeof AppDashboardChannelsEditIdIndexRoute
  AppDashboardGroupsIdAddChannelIndexRoute: typeof AppDashboardGroupsIdAddChannelIndexRoute
  AppDashboardGroupsIdEditIndexRoute: typeof AppDashboardGroupsIdEditIndexRoute
  AppDashboardGroupsIdShareIndexRoute: typeof AppDashboardGroupsIdShareIndexRoute
}

const AppDashboardRouteRouteChildren: AppDashboardRouteRouteChildren = {
  AppDashboardSettingsRouteRoute: AppDashboardSettingsRouteRouteWithChildren,
  AppDashboardIndexRoute: AppDashboardIndexRoute,
  AppDashboardAnimesIndexRoute: AppDashboardAnimesIndexRoute,
  AppDashboardChannelsIndexRoute: AppDashboardChannelsIndexRoute,
  AppDashboardGroupsIndexRoute: AppDashboardGroupsIndexRoute,
  AppDashboardGroupsIdIndexRoute: AppDashboardGroupsIdIndexRoute,
  AppDashboardGroupsNewIndexRoute: AppDashboardGroupsNewIndexRoute,
  AppDashboardAnimesChangeGroupIdIndexRoute:
    AppDashboardAnimesChangeGroupIdIndexRoute,
  AppDashboardAnimesEditIdIndexRoute: AppDashboardAnimesEditIdIndexRoute,
  AppDashboardChannelsChangeGroupIdIndexRoute:
    AppDashboardChannelsChangeGroupIdIndexRoute,
  AppDashboardChannelsEditIdIndexRoute: AppDashboardChannelsEditIdIndexRoute,
  AppDashboardGroupsIdAddChannelIndexRoute:
    AppDashboardGroupsIdAddChannelIndexRoute,
  AppDashboardGroupsIdEditIndexRoute: AppDashboardGroupsIdEditIndexRoute,
  AppDashboardGroupsIdShareIndexRoute: AppDashboardGroupsIdShareIndexRoute,
}

const AppDashboardRouteRouteWithChildren =
  AppDashboardRouteRoute._addFileChildren(AppDashboardRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AppDashboardRouteRoute: AppDashboardRouteRouteWithChildren,
  AppPrivacyRoute: AppPrivacyRoute,
  AppTermsRoute: AppTermsRoute,
  AppIndexRoute: AppIndexRoute,
  AppSupportIndexRoute: AppSupportIndexRoute,
  AuthForgotPasswordIndexRoute: AuthForgotPasswordIndexRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
  AuthRegisterIndexRoute: AuthRegisterIndexRoute,
  AuthSubscriptionsConfirmCodeRoute: AuthSubscriptionsConfirmCodeRoute,
  AppShareTypeIdIndexRoute: AppShareTypeIdIndexRoute,
  AuthForgotPasswordSuccessEmailIndexRoute:
    AuthForgotPasswordSuccessEmailIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
